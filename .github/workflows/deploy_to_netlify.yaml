name: deploy_to_netlify

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - closed

env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  DEPLOY_DIR: dist

jobs:
  set_deploy_environment:
    if: github.event.action != 'closed' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Set deploy environment as pr-${{ github.event.number }}
        if: github.base_ref == 'develop' && contains(fromJSON('["opened", "synchronize"]'), github.event.action)
        env:
          DEPLOY_ENVIRONMENT: pr-${{ github.event.number }}
        run: |
          echo "DEPLOY_ENVIRONMENT=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_PREFIX=${DEPLOY_ENVIRONMENT}--" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_ALIAS=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV

      - name: Set deploy environment as preview
        if: github.base_ref == 'develop' && github.event.action == 'closed' && github.event.pull_request.merged == true
        env:
          DEPLOY_ENVIRONMENT: preview
          PR_DEPLOY_ENVIRONMENT: pr-${{ github.event.number }}
        run: |
          echo "DEPLOY_ENVIRONMENT=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV
          echo "PR_DEPLOY_ENVIRONMENT=$PR_DEPLOY_ENVIRONMENT" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_PREFIX=${DEPLOY_ENVIRONMENT}--" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_ALIAS=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV

      - name: Set deploy environment as staging
        if: github.base_ref == 'main' && contains(fromJSON('["opened", "synchronize"]'), github.event.action)
        env:
          DEPLOY_ENVIRONMENT: staging
        run: |
          echo "DEPLOY_ENVIRONMENT=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_PREFIX=${DEPLOY_ENVIRONMENT}--" >> $GITHUB_ENV
          echo "NETLIFY_DEPLOY_ALIAS=$DEPLOY_ENVIRONMENT" >> $GITHUB_ENV

      - name: Set deploy environment as production
        if: github.base_ref == 'main' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: echo "DEPLOY_ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Set deploy environment output
        id: deploy_environment
        run: |
          echo "github_environment=$DEPLOY_ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "github_pr_environment=$PR_DEPLOY_ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "netlify_deploy_prefix=$NETLIFY_DEPLOY_PREFIX" >> $GITHUB_OUTPUT
          echo "netlify_deploy_alias=$NETLIFY_DEPLOY_ALIAS" >> $GITHUB_OUTPUT

    outputs:
      github_environment: ${{ steps.deploy_environment.outputs.github_environment }}
      github_pr_environment: ${{ steps.deploy_environment.outputs.github_pr_environment }}
      netlify_deploy_prefix: ${{ steps.deploy_environment.outputs.netlify_deploy_prefix }}
      netlify_deploy_alias: ${{ steps.deploy_environment.outputs.netlify_deploy_alias }}

  deploy:
    if: github.event.action != 'closed' || github.event.pull_request.merged == true
    needs: set_deploy_environment
    environment:
      name: ${{ needs.set_deploy_environment.outputs.github_environment }}
      url: ${{ steps.post_deploy.outputs.netlify_deploy_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        run: echo "pnpm_store_path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Netlify CLI
        run: pnpm add --save-dev netlify-cli

      - name: Set as production environment
        if: needs.set_deploy_environment.outputs.github_environment == 'production'
        run: echo "PROD=true" >> $GITHUB_ENV

      - name: Deploy ${{ needs.set_deploy_environment.outputs.github_environment }}
        id: deploy
        if: success()
        env:
          NETLIFY_DEPLOY_PREFIX: ${{ needs.set_deploy_environment.outputs.netlify_deploy_prefix }}
          NETLIFY_DEPLOY_ALIAS: ${{ needs.set_deploy_environment.outputs.netlify_deploy_alias }}
        shell: bash
        run: |
          set -e
          [[ ${PROD:-false} == "true" ]] && \
            OUTPUT=$(pnpm netlify deploy \
              --auth ${{ env.NETLIFY_AUTH_TOKEN }} \
              --site ${{ env.NETLIFY_SITE_ID }} \
              --json \
              --build \
              --context production \
              --message "$(git log -1 --pretty=%s)" \
              --prod \
              | tr '\n' ' ') || \
            OUTPUT=$(pnpm netlify deploy \
              --auth ${{ env.NETLIFY_AUTH_TOKEN }} \
              --site ${{ env.NETLIFY_SITE_ID }} \
              --json \
              --build \
              --context deploy-preview \
              --alias ${NETLIFY_DEPLOY_ALIAS} \
              --message "$(git log -1 --pretty=%s)" \
              | tr '\n' ' ')
          set +e

          NETLIFY_OUTPUT=$(echo "$OUTPUT")

          echo "netlify_output=$NETLIFY_OUTPUT" >> $GITHUB_OUTPUT
          echo "success=true" >> $GITHUB_OUTPUT

      - name: Post deploy ${{ needs.set_deploy_environment.outputs.github_environment }}
        id: post_deploy
        if: success()
        env:
          NETLIFY_DRAFT_URL: ${{ fromJson(steps.deploy.outputs.netlify_output).deploy_url }}
          NETLIFY_PROD_URL: ${{ fromJson(steps.deploy.outputs.netlify_output).url }}
        run: |
          [[ ${PROD:-false} == "true" ]] && \
            echo "netlify_deploy_url=$NETLIFY_PROD_URL" >> $GITHUB_OUTPUT || \
            echo "netlify_deploy_url=$NETLIFY_DRAFT_URL" >> $GITHUB_OUTPUT

    outputs:
      success: ${{ steps.deploy.outputs.success }}

  delete_resources:
    needs:
      - set_deploy_environment
      - deploy
    if: needs.deploy.outputs.success == 'true' &&
      github.base_ref == 'develop' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Delete the PR branch after merged into develop
        env:
          GH_TOKEN: ${{ github.token }}
          GIT_REF_PATH: /repos/${{ github.repository }}/git/refs/heads/${{ github.head_ref }}
        run: |
          STATUS_CODE=$(gh api -i -H "Accept: application/vnd.github+json" $GIT_REF_PATH | head -1)
          [[ "$STATUS_CODE" == "HTTP/2.0 200 OK" ]] && \
            gh api --method DELETE -H "Accept: application/vnd.github+json" $GIT_REF_PATH || \
            echo "Branch does not exist, deleting was ignored."

      - name: Delete the environment ${{ needs.set_deploy_environment.outputs.github_pr_environment }}
        if: needs.set_deploy_environment.outputs.github_pr_environment != ''
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh api \
            --method DELETE \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/environments/${{ needs.set_deploy_environment.outputs.github_pr_environment }}
